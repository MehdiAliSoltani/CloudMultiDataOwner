/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ADGUI;

import Encryption.AES;
import IO.RatingSearch;
import POJO.ConstAndVars;
import POJO.FileTable;
import POJO.Mail;
import POJO.Member;
import POJO.Query;
import POJO.SysFile;
import POJO.Utils;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mehdi
 */
public class Search extends javax.swing.JFrame {

    List<SysFile> tmpList = new ArrayList<SysFile>();

    /**
     * Creates new form Search
     */
    public Search() {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        jLabel2.setVisible(false);
        jTextArea1.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("keyword");

        jLabel2.setText("file description");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "File id", "File name", "Description", "Owner"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jButton2.setText("Request to Download");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Request to Edit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(189, 189, 189))
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(50, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(jButton1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)))
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        RatingSearch rs = new RatingSearch();
        String keyWord = jTextField1.getText();
        String description = jTextArea1.getText();
        //broadcast query to all users

        Utils util = new Utils();
        util.broadcastSearch(ConstAndVars.CURRENT_USER.getUserId(), keyWord);
        AES aes = new AES();
        for (SysFile sysFile : FileTable.fileList) {
            for (Query q : ConstAndVars.queryList) {
                if (sysFile.getCreator().getUserId() == q.getOwnerId()) {
                    int numAccurence = rs.findPatternInFile(q.getEncryptedKeyword(), sysFile.getFileNameDisk());
                    System.out.println("numAcc:" + numAccurence);
                    System.out.println(q.getEncryptedKeyword());
                    sysFile.setRankSerch(numAccurence);
                    if (sysFile.getRankSerch() > 0) {
                        tmpList.add(sysFile);
                    }

                }
            }
        }
        ConstAndVars.queryList.removeAll(ConstAndVars.queryList);
        //sort a files based on rank
        Collections.sort(tmpList, new Comparator<SysFile>() {
            @Override
            public int compare(SysFile o1, SysFile o2) {
                if (o1.getRankSerch() == o2.getRankSerch()) {
                    return 0;
                }
                return o1.getRankSerch() > o2.getRankSerch() ? -1 : 1;
            }
        });
//            System.out.println("");

        int groupType = ConstAndVars.CURRENT_USER.getGroup().getGroupType();
        String groupName = null;
        switch (groupType) {
            case ConstAndVars.MANAGERS:
                groupName = "Manager";
                break;
            case ConstAndVars.OTHERS:
                groupName = "Other";
                break;
            case ConstAndVars.OWNER:
                groupName = "Owner";
                break;
            case ConstAndVars.WRITER:
                groupName = "Writer";
                break;
        }
// show result into grid
        Object[] obj = new Object[4];
        DefaultTableModel tm = (DefaultTableModel) jTable1.getModel();
        tm.setRowCount(0);
        int i = 0;
        List<List<String>> tmTable = new ArrayList<List<String>>();
        for (SysFile sysFile : tmpList) {
            List<String> ls = new ArrayList<String>();

            ls.add("" + sysFile.getFileId());
            ls.add(aes.decrypt(
                    ConstAndVars.CLOUD_SERVER_KEY, ConstAndVars.initVector, sysFile.getFileNameSys()));
            ls.add(aes.decrypt(
                    ConstAndVars.CLOUD_SERVER_KEY, ConstAndVars.initVector, sysFile.getDescription()));

            ls.add(util.getFileOwner(sysFile.getFileId()));

            tmTable.add(ls);
        }

        for (List<String> ls : tmTable) {
            obj[0] = ls.get(0);
            obj[1] = ls.get(1);
            obj[2] = ls.get(2);
            obj[3] = ls.get(3);
            tm.insertRow(i++, obj);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int fileId = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        for (SysFile sysFile : FileTable.fileList) {
            if (sysFile.getFileId() == fileId) {
                int mailId = ConstAndVars.MAILBOX.size() + 1;
                Mail mailBox = new Mail(mailId, ConstAndVars.CURRENT_USER.getUserId(),
                        sysFile.getCreator().getUserId(), ConstAndVars.REQUEST_TO_DOWNLOAD, fileId);
                ConstAndVars.MAILBOX.add(mailBox);
                JOptionPane.showMessageDialog(rootPane, "Your request sent to file owner,");
                break;
            }
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (ConstAndVars.CURRENT_USER.getGroup().getGroupType() == ConstAndVars.WRITER) {
            int fileId = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
            for (SysFile sysFile : FileTable.fileList) {
                if (sysFile.getFileId() == fileId) {
                    int mailId = ConstAndVars.MAILBOX.size() + 1;
                    //get manager
                    Member manager = null;
                    for (Member mem : ConstAndVars.USERS) {
                        if (mem.getGroup().getGroupType() == ConstAndVars.MANAGERS) {
                            manager = mem;
                            break;
                        }
                    }
                    Mail mailBox = new Mail(mailId, ConstAndVars.CURRENT_USER.getUserId(),
                            manager.getUserId(), ConstAndVars.REQUEST_TO_EDIT, fileId);
//                for(Member mem: ConstAndVars.USERS){
//                    if(mem.getGroup().getGroupType() == ConstAndVars.MANAGERS){
//                        
//                    }
//                }
                    ConstAndVars.MAILBOX.add(mailBox);
                    JOptionPane.showMessageDialog(rootPane, "Your request sent to file owner,");
                    break;
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Your are not from Writer group");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Search().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
